{"version":3,"file":"319.js","mappings":"sOAQA,MAkGA,EAlGe,KACd,MAAMA,GAAUC,EAAAA,EAAAA,OACV,KAAEC,EAAF,MAAQC,EAAR,WAAeC,IAAeC,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,IAClDC,EAAOC,IAAiBC,EAAAA,EAAAA,GAAS,KACjCC,EAAUC,IAAoBF,EAAAA,EAAAA,GAAS,KACvCG,EAAUC,IAAeC,EAAAA,EAAAA,UAAiB,KAC1CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAiB,KACpDG,EAAeC,IAAoBJ,EAAAA,EAAAA,WAAkB,IACrDK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,KACxCO,EAAeC,IAAoBR,EAAAA,EAAAA,WAAS,GAE7CS,GAAmBC,EAAAA,EAAAA,cAAaC,IACrCZ,EAAYY,EAAEC,OAAOC,OACrBT,EAAiBO,EAAEC,OAAOC,QAAUZ,KAClC,CAACA,IAEEa,GAAwBJ,EAAAA,EAAAA,cAAaC,IAC1CT,EAAiBS,EAAEC,OAAOC,OAC1BT,EAAiBO,EAAEC,OAAOC,QAAUf,KAClC,CAACA,IAEEiB,GAAWL,EAAAA,EAAAA,cAAaC,IAC7BA,EAAEK,iBACGb,IACJG,EAAe,IACfE,GAAiB,GACjBS,IAAAA,KAAW,aAAc,CACxBxB,MAAAA,EAAOG,SAAAA,EAAUE,SAAAA,IAEhBoB,MAAMC,IACNX,GAAiB,GACjBY,YAAW,KACVlC,EAAQmC,KAAK,YACX,QAEHC,OAAOjC,IACPiB,EAAejB,EAAM8B,SAAS/B,SAE9BmC,SAAQ,YAET,CAAC9B,EAAOG,EAAUE,EAAUG,IAE/B,YAAauB,IAATpC,EACI,yCAGJA,EACI,gBAAC,KAAD,CAAUqC,GAAG,sCAIpB,uBAAKC,GAAG,aACP,gBAAC,WAAD,eACA,gBAAC,SAAD,CAAmBX,SAAUA,GAC5B,gBAAC,UAAD,CAAoBW,GAAG,eACtB,sCACA,2BACC,gBAAC,UAAD,CAAoBC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQf,MAAOpB,EAAOoC,SAAUnC,MAGnF,gBAAC,UAAD,CAAoBgC,GAAG,kBACtB,mCACA,2BACC,gBAAC,UAAD,CAAoBC,KAAK,OAAOD,GAAG,WAAWE,KAAK,WAAWf,MAAOjB,EAAUiC,SAAUhC,MAG3F,gBAAC,UAAD,CAAoB6B,GAAG,kBACtB,oCACA,2BACC,gBAAC,UAAD,CAAoBC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWf,MAAOf,EAAU+B,SAAUpB,MAG/F,gBAAC,UAAD,CAAoBiB,GAAG,wBACtB,uCACA,2BACC,gBAAC,UAAD,CACCC,KAAK,WACLD,GAAG,iBACHE,KAAK,iBACLf,MAAOZ,EACP4B,SAAUf,KAGXX,GAAiB,gBAAC,UAAD,0BAChBP,GAAY,gBAAC,UAAD,qBACbS,GAAe,gBAAC,UAAD,KAAqBA,GACpCE,GAAiB,gBAAC,YAAD,yCAEnB,gBAAC,WAAD,CAAqBoB,KAAK,UAA1B,SAED,gBAAC,kBAAD,mBAEK,gBAAC,KAAD,CAAMF,GAAG,UAAT","sources":["webpack://sleact_front/./pages/SignUp/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { SignupStyles } from './styles'\nimport { Link, Redirect, useHistory } from 'react-router-dom'\nimport useInput from '@hooks/useInput';\nimport axios from 'axios'\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\n\nconst SignUp = () => {\n\tconst history = useHistory()\n\tconst { data, error, revalidate } = useSWR('/api/users', fetcher)\n\tconst [email, onChangeEmail] = useInput('')\n\tconst [nickname, onChangeNickname] = useInput('')\n\tconst [password, setPassword] = useState<string>('')\n\tconst [passwordCheck, setPasswordCheck] = useState<string>('')\n\tconst [mismatchError, setMismatchError] = useState<boolean>(false);\n\tconst [signUpError, setSignUpError] = useState('')\n\tconst [signUpSuccess, setSignUpSuccess] = useState(false)\n\n\tconst onChangePassword = useCallback((e) => {\n\t\tsetPassword(e.target.value)\n\t\tsetMismatchError(e.target.value !== passwordCheck)\n\t}, [passwordCheck])\n\n\tconst onChangePasswordCheck = useCallback((e) => {\n\t\tsetPasswordCheck(e.target.value)\n\t\tsetMismatchError(e.target.value !== password)\n\t}, [password])\n\n\tconst onSubmit = useCallback((e) => {\n\t\te.preventDefault()\n\t\tif (!mismatchError) {\n\t\t\tsetSignUpError('');\n\t\t\tsetSignUpSuccess(false);\n\t\t\taxios.post('/api/users', {\n\t\t\t\temail, nickname, password\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tsetSignUpSuccess(true)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\thistory.push('/login')\n\t\t\t\t\t}, 2000)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tsetSignUpError(error.response.data)\n\t\t\t\t})\n\t\t\t\t.finally(() => { })\n\t\t}\n\t}, [email, nickname, password, passwordCheck])\n\n\tif (data === undefined) {\n\t\treturn <div>Loading...</div>\n\t}\n\n\tif (data) {\n\t\treturn <Redirect to=\"/workspace/sleact/channel/general\" />\n\t}\n\n\treturn (\n\t\t<div id=\"container\">\n\t\t\t<SignupStyles.Header>Sleact</SignupStyles.Header>\n\t\t\t<SignupStyles.Form onSubmit={onSubmit}>\n\t\t\t\t<SignupStyles.Label id=\"email-label\">\n\t\t\t\t\t<span>이메일 주소</span>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<SignupStyles.Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n\t\t\t\t\t</div>\n\t\t\t\t</SignupStyles.Label>\n\t\t\t\t<SignupStyles.Label id=\"nickname-label\">\n\t\t\t\t\t<span>닉네임</span>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<SignupStyles.Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\n\t\t\t\t\t</div>\n\t\t\t\t</SignupStyles.Label>\n\t\t\t\t<SignupStyles.Label id=\"password-label\">\n\t\t\t\t\t<span>비밀번호</span>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<SignupStyles.Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n\t\t\t\t\t</div>\n\t\t\t\t</SignupStyles.Label>\n\t\t\t\t<SignupStyles.Label id=\"password-check-label\">\n\t\t\t\t\t<span>비밀번호 확인</span>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<SignupStyles.Input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tid=\"password-check\"\n\t\t\t\t\t\t\tname=\"password-check\"\n\t\t\t\t\t\t\tvalue={passwordCheck}\n\t\t\t\t\t\t\tonChange={onChangePasswordCheck}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{mismatchError && <SignupStyles.Error>비밀번호가 일치하지 않습니다.</SignupStyles.Error>}\n\t\t\t\t\t{!nickname && <SignupStyles.Error>닉네임을 입력해주세요.</SignupStyles.Error>}\n\t\t\t\t\t{signUpError && <SignupStyles.Error>{signUpError}</SignupStyles.Error>}\n\t\t\t\t\t{signUpSuccess && <SignupStyles.Success>회원가입되었습니다! 2초 후 로그인 페이지로 이동합니다.</SignupStyles.Success>}\n\t\t\t\t</SignupStyles.Label>\n\t\t\t\t<SignupStyles.Button type=\"submit\">회원가입</SignupStyles.Button>\n\t\t\t</SignupStyles.Form>\n\t\t\t<SignupStyles.LinkContainer>\n\t\t\t\t이미 회원이신가요?&nbsp;\n        <Link to=\"/login\">로그인 하러가기</Link>\n\t\t\t</SignupStyles.LinkContainer>\n\t\t</div>\n\t);\n};\n\nexport default SignUp;\n"],"names":["history","useHistory","data","error","revalidate","useSWR","fetcher","email","onChangeEmail","useInput","nickname","onChangeNickname","password","setPassword","useState","passwordCheck","setPasswordCheck","mismatchError","setMismatchError","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","axios","then","response","setTimeout","push","catch","finally","undefined","to","id","type","name","onChange"],"sourceRoot":""}