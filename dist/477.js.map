{"version":3,"file":"477.js","mappings":"mOAgBA,MAyCA,EAzCsC,EAAGA,KAAAA,EAAMC,aAAAA,EAAcC,mBAAAA,MAC5D,MAAM,UAAEC,EAAF,QAAaC,IAAYC,EAAAA,EAAAA,OACxBC,EAAWC,EAAmBC,IAAgBC,EAAAA,EAAAA,GAAS,KACtDC,KAAMC,IAAaC,EAAAA,EAAAA,IAC1B,aACAC,EAAAA,EACA,CAAEC,iBAAkB,OAEbC,WAAYC,IAAsBJ,EAAAA,EAAAA,IACzCD,GAAYP,EAAW,mBAAkBD,cAAsBC,YAAoB,KACnFS,EAAAA,GAGKI,GAAiBC,EAAAA,EAAAA,cAAaC,IACnCA,EAAEC,iBACGd,GAAcA,EAAUe,QAC7BC,IAAAA,KAAY,mBAAkBnB,cAAsBC,YAAmB,CACtEmB,MAAOjB,GACL,CAAEkB,iBAAiB,IACpBC,MAAMC,IACNV,IACAd,GAAmB,GACnBM,EAAa,OAEbmB,OAAOC,IAAU,MACjBC,EAAAA,GAAAA,MAAA,UAAYD,EAAMF,gBAAlB,aAAY,EAAgBhB,KAAM,CAAEoB,SAAU,uBAE9C,CAAC3B,EAAWG,IACf,OACC,gBAAC,IAAD,CAAON,KAAMA,EAAMC,aAAcA,GAChC,wBAAM8B,SAAUd,GACf,gBAAC,UAAD,CAAoBe,GAAG,gBACtB,qDACA,gBAAC,UAAD,CAAoBA,GAAG,SAASC,KAAK,QAAQC,MAAO5B,EAAW6B,SAAU5B,KAE1E,gBAAC,WAAD,CAAqB0B,KAAK,UAA1B,c,qECjDG,MAAMG,EAAa,CACzBC,aAAa,cAAF,oBAAE,CAAF,4dAwBXC,kBAAkB,iBAAF,oBAAE,CAAF,kICDjB,EAlByB,EAAGtC,KAAAA,EAAMuC,SAAAA,EAAUtC,aAAAA,MAC3C,MAAMuC,GAAkBtB,EAAAA,EAAAA,cAAaC,IACpCA,EAAEqB,oBACA,IAEH,OAAKxC,EAIJ,gBAACoC,EAAWC,YAAZ,KACC,uBAAKI,QAASD,GACb,gBAACJ,EAAWE,iBAAZ,CAA6BG,QAASxC,GAAtC,KACCsC,IANI,O,8ECVT,MAEMG,EAAoD,GAsB1D,EArBmBvC,IACjB,MAAMwC,GAAazB,EAAAA,EAAAA,cAAY,KACzBf,IACFuC,EAAQvC,GAAWwC,oBACZD,EAAQvC,MAEhB,CAACA,IAEJ,OAAKA,GAIAuC,EAAQvC,KACXuC,EAAQvC,GAAayC,IAAAA,QAAY,4BAAgBzC,IAAa,CAC5D0C,WAAY,CAAC,gBAIV,CAACH,EAAQvC,GAAYwC,IATnB,MAACG,EAAWH,K,yHCdhB,MAAMI,EAAiB,CAE7BC,WAAW,cAAF,qBAAE,CAAF,sCAITC,QAAQ,iBAAF,qBAAE,CAAF,mJASNC,YAAY,cAAF,qBAAE,CAAF,uFAQVC,cAAc,cAAF,qBAAE,CAAF,gPAqBZC,cAAc,iBAAF,oBAAE,CAAF,wLAYZC,kBAAkB,cAAF,oBAAE,CAAF,8CAKhBC,YAAY,cAAF,oBAAE,CAAF,wPAaVC,UAAU,cAAF,oBAAE,CAAF,wnBA+CRC,eAAe,iBAAF,oBAAE,CAAF,4VAoBbC,YAAY,cAAF,oBAAE,CAAF,sEAIVC,gBAAgB,cAAF,oBAAE,CAAF,iQAkBdC,OAAO,cAAF,oBAAE,CAAF,iCAGLC,WAAW,iBAAF,oBAAE,CAAF,mJAUTC,iBAAiB,iBAAF,oBAAE,CAAF,iN,qDChLT,MAAMC,EAAa,CACzBC,YAAY,cAAF,mBAAE,CAAF,0bAqBVzB,kBAAkB,iBAAF,mBAAE,CAAF,kICdX0B,EAAkB,EAAGzB,SAAAA,EAAU0B,MAAAA,EAAOjE,KAAAA,EAAMC,aAAAA,EAAciE,YAAAA,MAC/D,MAAM1B,GAAkBtB,EAAAA,EAAAA,cAAaC,IACpCA,EAAEqB,oBACA,IAEH,OAAKxC,EAKJ,gBAAC8D,EAAWC,WAAZ,CAAuBtB,QAASxC,GAC/B,uBAAKgE,MAAOA,EAAOxB,QAASD,GAC1B0B,GAAe,gBAACJ,EAAWxB,iBAAZ,CAA6BG,QAASxC,GAAtC,KACfsC,IAPI,MAaTyB,EAAKG,aAAe,CACnBD,aAAa,GAGd,U,4CChBA,MA8CA,EA9CsC,EAAGlE,KAAAA,EAAMC,aAAAA,EAAcmE,0BAAAA,MAC5D,MAAOC,EAAYC,EAAoBC,IAAiB9D,EAAAA,EAAAA,GAAS,KAC3D,UAAEN,EAAF,QAAaC,IAAYC,EAAAA,EAAAA,OACvBK,KAAMC,EAAR,MAAkBiB,EAAlB,WAAyBb,EAAzB,OAAqCyD,IAAW5D,EAAAA,EAAAA,IACrD,aACAC,EAAAA,EACA,CAAEC,iBAAkB,OAEbC,WAAYC,IAAsBJ,EAAAA,EAAAA,IACzCD,EAAY,mBAAkBR,aAAuB,KACrDU,EAAAA,GAGK4D,GAAkBvD,EAAAA,EAAAA,cAAaC,IACpCA,EAAEC,iBACFE,IAAAA,KAAY,mBAAkBnB,aAAsB,CACnDuE,KAAML,GACJ,CAAE7C,iBAAiB,IACpBC,MAAMC,IACP0C,GAA0B,GAC1BpD,IACAuD,EAAc,OAEb5C,OAAOC,IAAU,MACjB+C,QAAQC,IAAIhD,GACZC,EAAAA,GAAAA,MAAA,UAAYD,EAAMF,gBAAlB,aAAY,EAAgBhB,KAAM,CAAEoB,SAAU,uBAE9C,CAACuC,IAEJ,OAAKrE,EAKJ,gBAAC6E,EAAA,EAAD,CAAO7E,KAAMA,EAAMC,aAAcA,GAChC,wBAAM8B,SAAU0C,GACf,gBAAC,UAAD,CAAoBzC,GAAG,iBACtB,uCACA,gBAAC,UAAD,CAAoBA,GAAG,UAAUE,MAAOmC,EAAYlC,SAAUmC,KAE/D,gBAAC,WAAD,CAAqBrC,KAAK,UAA1B,YAVK,MCWT,EA1CwC,EAAGjC,KAAAA,EAAMC,aAAAA,EAAcC,mBAAAA,MAC9D,MAAM,UAAEC,IAAcE,EAAAA,EAAAA,OACfC,EAAWC,EAAmBC,IAAgBC,EAAAA,EAAAA,GAAS,KACtDC,KAAMC,IAAaC,EAAAA,EAAAA,IAC1B,aACAC,EAAAA,EACA,CAAEC,iBAAkB,OAEbC,WAAY+D,IAAqBlE,EAAAA,EAAAA,IACxCD,EAAY,mBAAkBR,YAAsB,KACpDU,EAAAA,GAGKI,GAAiBC,EAAAA,EAAAA,cAAaC,IACnCA,EAAEC,iBACGd,GAAcA,EAAUe,QAC7BC,IAAAA,KAAY,mBAAkBnB,YAAqB,CAClDoB,MAAOjB,GACL,CAAEkB,iBAAiB,IACpBC,MAAMC,IACNoD,IACA5E,GAAmB,GACnBM,EAAa,OAEbmB,OAAOC,IAAU,MACjBC,EAAAA,GAAAA,MAAA,UAAYD,EAAMF,gBAAlB,aAAY,EAAgBhB,KAAM,CAAEoB,SAAU,uBAE9C,CAAC3B,EAAWG,IAEf,OACC,gBAACuE,EAAA,EAAD,CAAO7E,KAAMA,EAAMC,aAAcA,GAChC,wBAAM8B,SAAUd,GACf,gBAAC,UAAD,CAAoBe,GAAG,iBACtB,qCACA,gBAAC,UAAD,CAAoBA,GAAG,UAAUC,KAAK,QAAQC,MAAO5B,EAAW6B,SAAU5B,KAE3E,gBAAC,WAAD,CAAqB0B,KAAK,UAA1B,a,cClDG,MAAM8C,GAAiB,iBAAH,mBAAG,CAAH,wKAWvB,EAAGC,SAAAA,KACLA,GACC,kDAbwB,K,cCO3B,MA2EA,EA3EmB,KAClB,MAAM,UAAE7E,IAAcE,EAAAA,EAAAA,OACdK,KAAMC,EAAR,MAAkBiB,EAAlB,WAAyBb,EAAzB,OAAqCyD,IAAW5D,EAAAA,EAAAA,IAAe,aAAaC,EAAAA,EAAS,CAC1FC,iBAAkB,OAEXJ,KAAMuE,IAAerE,EAAAA,EAAAA,IAC5BD,EAAY,mBAAkBR,YAAsB,KACpDU,EAAAA,IAEMqE,IAAUC,EAAAA,EAAAA,GAAUhF,IACpBiF,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,IAChDC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAmB,IAEjDG,GAAwBvE,EAAAA,EAAAA,cAAY,KACzCmE,GAAoBK,IAAUA,MAC5B,IAoBH,OAlBAC,EAAAA,EAAAA,YAAU,KAETH,EAAc,MACZ,CAACrF,KAEJwF,EAAAA,EAAAA,YAAU,KACTT,MAAAA,GAAAA,EAAQU,GAAG,cAAelF,IACzB8E,EAAc9E,MAIR,KAGNwE,MAAAA,GAAAA,EAAQW,IAAI,iBAEX,CAACX,IAGH,gCACC,0BACC,gBAACH,EAAD,CAAgBC,SAAUI,EAAiB3C,QAASgD,GACnD,qBACCK,UAAU,mKACV,UAAQ,2BACR,cAAY,UAGd,gDAED,4BACGV,IACDH,MAAAA,OADA,EACAA,EAAYc,KAAKC,IAChB,MAAMC,EAAWV,EAAWW,SAASF,EAAOhE,IAC5C,OACC,gBAAC,KAAD,CACCmE,IAAKH,EAAOhE,GACZoE,gBAAgB,WAChBC,GAAK,cAAalG,QAAgB6F,EAAOhE,MACzC,qBACC8D,UAAY,qGAAmGG,EAAW,6CAA+C,4BAEzK,cAAY,OACZ,UAAQ,qBACR,wBAAsB,QACtB,0BAAwB,QACxB,uBAAqB,UAEtB,4BAAOD,EAAOM,UACbN,EAAOhE,MAAOrB,MAAAA,OAAd,EAAcA,EAAUqB,KAAM,6CCvBvC,EA3CwB,KACvB,MAAM,UAAE7B,IAAcE,EAAAA,EAAAA,OAEdK,KAAMC,EAAR,MAAkBiB,EAAlB,WAAyBb,EAAzB,OAAqCyD,IAAW5D,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CAC1FC,iBAAkB,OAEXJ,KAAM6F,IAAgB3F,EAAAA,EAAAA,IAAmBD,EAAY,mBAAkBR,aAAuB,KAAMU,EAAAA,IACrGuE,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,GAEjDG,GAAwBvE,EAAAA,EAAAA,cAAY,KACzCmE,GAAoBK,IAAUA,MAC5B,IAEH,OACC,gCACC,0BACC,gBAACX,EAAD,CAAgBC,SAAUI,EAAiB3C,QAASgD,GACnD,qBACCK,UAAU,mKACV,UAAQ,2BACR,cAAY,UAGd,yCAED,4BACGV,IACDmB,MAAAA,OADA,EACAA,EAAaR,KAAK3F,GAEhB,gBAAC,KAAD,CACC+F,IAAK/F,EAAQsE,KACb0B,gBAAgB,WAChBC,GAAK,cAAalG,aAAqBC,EAAQsE,QAE/C,iCAAStE,EAAQsE,aCrBnB8B,GAAUC,EAAAA,EAAAA,KAAS,IAAM,gEACzBC,GAAgBD,EAAAA,EAAAA,KAAS,IAAM,iEA6KrC,EA3KuB,KACtB,MAAOE,EAAQC,EAAgBC,IAAapG,EAAAA,EAAAA,GAAS,KAC9CqG,EAAcC,EAAsBC,IAAmBvG,EAAAA,EAAAA,GAAS,KAChEwG,EAAcC,IAAmB5B,EAAAA,EAAAA,WAAkB,IACnD6B,EAAoBC,IAAyB9B,EAAAA,EAAAA,WAAkB,IAC/D+B,EAA0BC,IAA+BhC,EAAAA,EAAAA,WAAkB,IAC3EiC,EAAwBnD,IAA6BkB,EAAAA,EAAAA,WAAkB,IACvEkC,EAA0BC,IAA+BnC,EAAAA,EAAAA,WAAkB,IAC3EoC,EAAwBC,IAA6BrC,EAAAA,EAAAA,WAAkB,IACxE,UAAEnF,IAAcE,EAAAA,EAAAA,OAEhB,KAAEK,EAAF,MAAQkB,EAAR,WAAeb,EAAf,OAA2ByD,IAAW5D,EAAAA,EAAAA,IAAsB,aAAcC,EAAAA,EAAS,CACxFC,iBAAkB,OAEXJ,KAAM6F,IAAgB3F,EAAAA,EAAAA,IAAmBF,EAAQ,mBAAkBP,aAAuB,KAAMU,EAAAA,IAChGH,KAAMuE,IAAerE,EAAAA,EAAAA,IAAgBF,EAAQ,mBAAkBP,YAAsB,KAAMU,EAAAA,IAC5FqE,EAAQvC,IAAcwC,EAAAA,EAAAA,GAAUhF,IAEvCwF,EAAAA,EAAAA,YAAU,KACLY,GAAe7F,GAAQwE,GAC1BA,EAAO0C,KAAK,QAAS,CAAE5F,GAAItB,EAAKsB,GAAI6F,SAAUtB,EAAYR,KAAK+B,GAAMA,EAAE9F,SAEtE,CAACkD,EAAQxE,EAAM6F,KAElBZ,EAAAA,EAAAA,YAAU,IACF,KACNhD,MAEC,CAACxC,EAAWwC,IAEf,MAAMoF,GAAW7G,EAAAA,EAAAA,cAAY,KAC5BI,IAAAA,KAAW,oBAAqB,KAAM,CACrCE,iBAAiB,IAEhBC,MAAK,KACL+C,GAAO,GAAO,QAEd,IAEGwD,GAAqB9G,EAAAA,EAAAA,cAAY,KACtCgG,GAAiBD,KACf,CAACA,IAEEgB,GAAyB/G,EAAAA,EAAAA,cAAY,KAC1CoG,GAA4B,KAC1B,IAEGrH,GAAeiB,EAAAA,EAAAA,cAAY,KAChCoG,GAA4B,GAC5BlD,GAA0B,GAC1BqD,GAA4B,GAC5BE,GAA0B,KACxB,IAEGO,GAAoBhH,EAAAA,EAAAA,cAAY,KACrCkD,GAA0B,KACxB,IAEG+D,GAAyBjH,EAAAA,EAAAA,cAAY,KAC1CuG,GAA4B,KAC1B,IAEGW,IAAkBlH,EAAAA,EAAAA,cAAaC,IACpCA,EAAEC,iBACG0F,GAAiBA,EAAazF,QAC9BsF,GAAWA,EAAOtF,QACvBC,IAAAA,KAAW,kBAAmB,CAC7BnB,UAAW2G,EACXuB,IAAK1B,GAEL,CAAEnF,iBAAiB,IAClBC,MAAK,KACNV,IACAuG,GAA4B,GAC5BN,EAAgB,IAChBH,EAAU,OACRlF,OAAOC,IAAU,MACnB+C,QAAQC,IAAIhD,GACZC,EAAAA,GAAAA,MAAA,UAAYD,EAAMF,gBAAlB,aAAY,EAAgBhB,KAAM,CAAEoB,SAAU,uBAE7C,CAACgF,EAAcH,IAEZ2B,IAAuBpH,EAAAA,EAAAA,cAAY,KACxCkG,GAAuBD,KACrB,CAACA,IAGJ,YAAarE,IAATpC,EACI,yCAGHA,EAKJ,2BACC,gBAACqC,EAAeE,OAAhB,KACC,gBAACF,EAAeC,UAAhB,KACC,wBAAMP,QAASuF,GACd,gBAACjF,EAAeG,WAAhB,CAA2BqF,IAAKC,IAAAA,IAAa9H,EAAKa,MAAO,CAAEkH,EAAG,OAAQC,EAAG,UAAYC,IAAKjI,EAAK4F,WAC9FW,GACA,gBAAC,EAAD,CAAMhD,MAAO,CAAE2E,MAAO,EAAGC,IAAK,IAAM7I,KAAMiH,EAAchH,aAAc+H,GACrE,gBAACjF,EAAeI,aAAhB,KACC,uBAAKoF,IAAKC,IAAAA,IAAa9H,EAAK4F,SAAU,CAAEmC,EAAG,OAAQC,EAAG,UAAYC,IAAKjI,EAAK4F,WAC5E,2BACC,wBAAMtE,GAAG,gBAAgBtB,EAAK4F,UAC9B,wBAAMtE,GAAG,kBAAT,YAGF,gBAACe,EAAeK,aAAhB,CAA6BX,QAASsF,GAAtC,eAML,gBAAChF,EAAeM,iBAAhB,KACC,gBAACN,EAAeO,WAAhB,KACE5C,GAAQA,EAAK4C,YAAc5C,EAAK4C,WAAWyC,KAAK+C,GAE/C,gBAAC,KAAD,CAAM3C,IAAK2C,EAAG9G,GAAIqE,GAAK,cAAayC,EAAGpE,wBACtC,gBAAC3B,EAAec,gBAAhB,KAAiCiF,EAAGpE,KAAKqE,MAAM,EAAG,GAAGC,kBAIxD,gBAACjG,EAAea,UAAhB,CAA0BnB,QAASwF,GAAnC,MAED,gBAAClF,EAAeQ,SAAhB,KACC,gBAACR,EAAeS,cAAhB,CAA8Bf,QAAS6F,IAAvC,UAGA,gBAACvF,EAAeU,WAAhB,KACC,gBAAC,EAAD,CAAMzD,KAAMmH,EAAoBlH,aAAcqI,GAAsBrE,MAAO,CAAE4E,IAAK,GAAII,KAAM,KAC3F,gBAAClG,EAAeW,eAAhB,KACC,oCACA,0BAAQjB,QAAS0F,GAAjB,gCACA,0BAAQ1F,QAASyF,GAAjB,iBAGF,gBAAC,EAAD,MACA,gBAAC,EAAD,QAIF,gBAACnF,EAAeY,MAAhB,KACC,gBAAC,KAAD,KACC,gBAAC,KAAD,CAAOuF,KAAK,yCAAyCC,UAAW3C,IAChE,gBAAC,KAAD,CAAO0C,KAAK,+BAA+BC,UAAWzC,OAIzD,gBAAC7B,EAAA,EAAD,CAAO7E,KAAMqH,EAA0BpH,aAAcA,GACpD,wBAAM8B,SAAUqG,IACf,gBAAC,UAAD,CAAoBpG,GAAG,mBACtB,8CACA,gBAAC,UAAD,CAAoBA,GAAG,YAAYE,MAAO4E,EAAc3E,SAAU4E,KAEnE,gBAAC,UAAD,CAAoB/E,GAAG,uBACtB,6CACA,gBAAC,UAAD,CAAoBA,GAAG,YAAYE,MAAOyE,EAAQxE,SAAUyE,KAE7D,gBAAC,WAAD,CAAqB3E,KAAK,UAA1B,YAGF,gBAAC,EAAD,CAAoBjC,KAAMuH,EAAwBtH,aAAcA,EAAcmE,0BAA2BA,IACzG,gBAAC,EAAD,CAAsBpE,KAAMwH,EAA0BvH,aAAcA,EAAcC,mBAAoBuH,IACtG,gBAAC2B,EAAA,EAAD,CAAoBpJ,KAAM0H,EAAwBzH,aAAcA,EAAcC,mBAAoByH,KA1E5F,gBAAC,KAAD,CAAUtB,GAAG,a","sources":["webpack://sleact_front/./components/InviteChannelModal/index.tsx","webpack://sleact_front/./components/Modal/styles.tsx","webpack://sleact_front/./components/Modal/index.tsx","webpack://sleact_front/./hooks/useSocket.ts","webpack://sleact_front/./layouts/Workspace/styles.tsx","webpack://sleact_front/./components/Menu/styles.tsx","webpack://sleact_front/./components/Menu/index.tsx","webpack://sleact_front/./components/CreateChannelModal/index.tsx","webpack://sleact_front/./components/InviteWorkspaceModal/index.tsx","webpack://sleact_front/./components/DMList/styles.tsx","webpack://sleact_front/./components/DMList/index.tsx","webpack://sleact_front/./components/ChannelList/index.tsx","webpack://sleact_front/./layouts/Workspace/index.tsx"],"sourcesContent":["import React, { FC, useCallback } from 'react'\nimport useSWR from 'swr'\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\nimport { useParams } from 'react-router'\nimport { SignupStyles } from '@pages/SignUp/styles'\nimport Modal from '@components/Modal'\nimport useInput from '@hooks/useInput'\nimport fetcher from '@utils/fetcher'\nimport { IChannel, IUser } from '@typings/db'\n\ninterface Props {\n\tshow: boolean;\n\tonCloseModal: () => void\n\tsetShowInviteModal: (flag: boolean) => void;\n}\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteModal }) => {\n\tconst { workspace, channel } = useParams<{ workspace: string, channel: string }>()\n\tconst [newMember, onChangeNewMember, setNewMember] = useInput('')\n\tconst { data: userData } = useSWR<IUser>(\n\t\t'/api/users',\n\t\tfetcher,\n\t\t{ dedupingInterval: 1000 }\n\t);\n\tconst { revalidate: revalidateChannel } = useSWR<IUser[]>(\n\t\tuserData && channel ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n\t\tfetcher\n\t)\n\n\tconst onInviteMember = useCallback((e) => {\n\t\te.preventDefault()\n\t\tif (!newMember || !newMember.trim()) return;\n\t\taxios.post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\n\t\t\temail: newMember\n\t\t}, { withCredentials: true })\n\t\t\t.then((response) => {\n\t\t\t\trevalidateChannel()\n\t\t\t\tsetShowInviteModal(false);\n\t\t\t\tsetNewMember('')\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\ttoast.error(error.response?.data, { position: 'bottom-center' })\n\t\t\t})\n\t}, [workspace, newMember])\n\treturn (\n\t\t<Modal show={show} onCloseModal={onCloseModal}>\n\t\t\t<form onSubmit={onInviteMember}>\n\t\t\t\t<SignupStyles.Label id='member-label'>\n\t\t\t\t\t<span>Invite Channel Member</span>\n\t\t\t\t\t<SignupStyles.Input id=\"member\" type='email' value={newMember} onChange={onChangeNewMember} />\n\t\t\t\t</SignupStyles.Label>\n\t\t\t\t<SignupStyles.Button type='submit'>INVITE</SignupStyles.Button>\n\t\t\t</form>\n\t\t</Modal>\n\t)\n}\n\nexport default InviteChannelModal","import styled from '@emotion/styled';\n\nexport const ModalStyle = {\n\tCreateModal: styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`,\n\tCloseModalButton: styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`\n}\n","import React, { FC, useCallback } from 'react'\nimport { ModalStyle } from './styles';\n\ninterface Props {\n\tshow: boolean;\n\tonCloseModal: () => void\n}\n\nconst Modal: FC<Props> = ({ show, children, onCloseModal }) => {\n\tconst stopPropagation = useCallback((e) => {\n\t\te.stopPropagation()\n\t}, [])\n\n\tif (!show) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<ModalStyle.CreateModal>\n\t\t\t<div onClick={stopPropagation}>\n\t\t\t\t<ModalStyle.CloseModalButton onClick={onCloseModal}>&times;</ModalStyle.CloseModalButton>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</ModalStyle.CreateModal>\n\t)\n}\n\nexport default Modal","import axios from 'axios';\nimport { useCallback } from 'react';\nimport io from 'socket.io-client';\n\nconst backUrl = 'http://localhost:3095';\n\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\n  const disconnect = useCallback(() => {\n    if (workspace) {\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, [workspace]);\n\n  if (!workspace) {\n    return [undefined, disconnect];\n  }\n\n  if (!sockets[workspace]) {\n    sockets[workspace] = io.connect(`${backUrl}/ws-${workspace}`, {\n      transports: ['websocket'],\n    });\n  }\n\n  return [sockets[workspace], disconnect];\n};\n\nexport default useSocket;\n","import styled from '@emotion/styled';\n\nexport const WorkSpaceStyle = {\n\n\tRightMenu: styled.div`\n  float: right;\n`,\n\n\tHeader: styled.header`\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`,\n\n\tProfileImg: styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`,\n\n\tProfileModal: styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    display: flex;\n  }\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`,\n\n\tLogOutButton: styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n`,\n\n\tWorkspaceWrapper: styled.div`\n  display: flex;\n  flex: 1;\n`,\n\n\tWorkspaces: styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`,\n\n\tChannels: styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n    &.selected {\n      color: white;\n    }\n  }\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`,\n\n\tWorkspaceName: styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`,\n\tMenuScroll: styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`,\n\tWorkspaceModal: styled.div`\n  padding: 10px 0 0;\n  & h2 {\n    padding-left: 20px;\n  }\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`,\n\tChats: styled.div`\n  flex: 1;\n`,\n\tAddButton: styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`,\n\tWorkspaceButton: styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`,\n\n}","import styled from '@emotion/styled';\n\nexport const MenuStyles = {\n\tCreateMenu: styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`,\n\tCloseModalButton: styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`\n}\n","import React, { CSSProperties, FC, useCallback } from 'react'\nimport { MenuStyles } from './styles'\n\ninterface Props {\n\tshow: boolean;\n\tonCloseModal: (e: any) => void;\n\tstyle: CSSProperties\n\tcloseButton?: boolean\n}\n\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\n\tconst stopPropagation = useCallback((e) => {\n\t\te.stopPropagation();\n\t}, [])\n\n\tif (!show) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<MenuStyles.CreateMenu onClick={onCloseModal}>\n\t\t\t<div style={style} onClick={stopPropagation}>\n\t\t\t\t{closeButton && <MenuStyles.CloseModalButton onClick={onCloseModal}>&times;</MenuStyles.CloseModalButton>}\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</MenuStyles.CreateMenu>\n\t)\n}\n\nMenu.defaultProps = {\n\tcloseButton: true\n}\n\nexport default Menu","import React, { FC, useCallback } from 'react'\nimport { SignupStyles } from '@pages/SignUp/styles'\nimport useInput from '@hooks/useInput';\nimport Modal from '@components/Modal';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport { IChannel, IUser } from '../../typings/db';\nimport fetcher from '../../utils/fetcher';\n\ninterface Props {\n\tshow: boolean;\n\tonCloseModal: () => void\n\tsetShowCreateChannelModal: (flag: boolean) => void;\n}\n\nconst CreateChannelModal: FC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\n\tconst [newChannel, onChangeNewChannel, setNewChannel] = useInput('')\n\tconst { workspace, channel } = useParams<{ workspace: string, channel: string }>()\n\tconst { data: userData, error, revalidate, mutate } = useSWR<IUser | false>(\n\t\t'/api/users',\n\t\tfetcher,\n\t\t{ dedupingInterval: 1000 }\n\t);\n\tconst { revalidate: revalidateChannel } = useSWR<IChannel[]>(\n\t\tuserData ? `/api/workspaces/${workspace}/channels` : null,\n\t\tfetcher\n\t)\n\n\tconst onCreateChannel = useCallback((e) => {\n\t\te.preventDefault()\n\t\taxios.post(`/api/workspaces/${workspace}/channels`, {\n\t\t\tname: newChannel\n\t\t}, { withCredentials: true }\n\t\t).then((response) => {\n\t\t\tsetShowCreateChannelModal(false)\n\t\t\trevalidateChannel()\n\t\t\tsetNewChannel('')\n\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.dir(error)\n\t\t\t\ttoast.error(error.response?.data, { position: 'bottom-center' })\n\t\t\t})\n\t}, [newChannel])\n\n\tif (!show) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Modal show={show} onCloseModal={onCloseModal}>\n\t\t\t<form onSubmit={onCreateChannel}>\n\t\t\t\t<SignupStyles.Label id='channel-label'>\n\t\t\t\t\t<span>Channel</span>\n\t\t\t\t\t<SignupStyles.Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\n\t\t\t\t</SignupStyles.Label>\n\t\t\t\t<SignupStyles.Button type='submit'>Create</SignupStyles.Button>\n\t\t\t</form>\n\t\t</Modal>\n\t)\n}\n\nexport default CreateChannelModal","import React, { FC, useCallback } from 'react'\nimport useSWR from 'swr'\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\nimport { useParams } from 'react-router'\nimport { SignupStyles } from '@pages/SignUp/styles'\nimport Modal from '@components/Modal'\nimport useInput from '@hooks/useInput'\nimport fetcher from '@utils/fetcher'\nimport { IChannel, IUser } from '@typings/db'\n\ninterface Props {\n\tshow: boolean;\n\tonCloseModal: () => void\n\tsetShowInviteModal: (flag: boolean) => void;\n}\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteModal }) => {\n\tconst { workspace } = useParams<{ workspace: string }>()\n\tconst [newMember, onChangeNewMember, setNewMember] = useInput('')\n\tconst { data: userData } = useSWR<IUser | false>(\n\t\t'/api/users',\n\t\tfetcher,\n\t\t{ dedupingInterval: 1000 }\n\t);\n\tconst { revalidate: revalidateMember } = useSWR<IChannel[]>(\n\t\tuserData ? `/api/workspaces/${workspace}/members` : null,\n\t\tfetcher\n\t)\n\n\tconst onInviteMember = useCallback((e) => {\n\t\te.preventDefault()\n\t\tif (!newMember || !newMember.trim()) return;\n\t\taxios.post(`/api/workspaces/${workspace}/members`, {\n\t\t\temail: newMember\n\t\t}, { withCredentials: true })\n\t\t\t.then((response) => {\n\t\t\t\trevalidateMember()\n\t\t\t\tsetShowInviteModal(false);\n\t\t\t\tsetNewMember('')\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\ttoast.error(error.response?.data, { position: 'bottom-center' })\n\t\t\t})\n\t}, [workspace, newMember])\n\n\treturn (\n\t\t<Modal show={show} onCloseModal={onCloseModal}>\n\t\t\t<form onSubmit={onInviteMember}>\n\t\t\t\t<SignupStyles.Label id='channel-label'>\n\t\t\t\t\t<span>Email</span>\n\t\t\t\t\t<SignupStyles.Input id=\"channel\" type='email' value={newMember} onChange={onChangeNewMember} />\n\t\t\t\t</SignupStyles.Label>\n\t\t\t\t<SignupStyles.Button type='submit'>INVITE</SignupStyles.Button>\n\t\t\t</form>\n\t\t</Modal>\n\t)\n}\n\nexport default InviteWorkspaceModal","import styled from '@emotion/styled';\n\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n  ${({ collapse }) =>\n\t\tcollapse &&\n\t\t`\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","import { CollapseButton } from '@components/DMList/styles';\nimport useSocket from '@hooks/useSocket';\nimport { IUser, IUserWithOnline } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst DMList: FC = () => {\n\tconst { workspace } = useParams<{ workspace?: string }>();\n\tconst { data: userData, error, revalidate, mutate } = useSWR<IUser>(`/api/users`, fetcher, {\n\t\tdedupingInterval: 1000, // 2sec\n\t});\n\tconst { data: memberData } = useSWR<IUserWithOnline[]>(\n\t\tuserData ? `/api/workspaces/${workspace}/members` : null,\n\t\tfetcher,\n\t);\n\tconst [socket] = useSocket(workspace);\n\tconst [channelCollapse, setChannelCollapse] = useState(false);\n\tconst [onlineList, setOnlineList] = useState<number[]>([]);\n\n\tconst toggleChannelCollapse = useCallback(() => {\n\t\tsetChannelCollapse((prev) => !prev);\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// console.log('DMList: workspace 바꼈다', workspace);\n\t\tsetOnlineList([]);\n\t}, [workspace]);\n\n\tuseEffect(() => {\n\t\tsocket?.on('onlineList', (data: number[]) => {\n\t\t\tsetOnlineList(data);\n\t\t});\n\t\t// socket?.on('dm', onMessage);\n\t\t// console.log('socket on dm', socket?.hasListeners('dm'), socket);\n\t\treturn () => {\n\t\t\t// socket?.off('dm', onMessage);\n\t\t\t// console.log('socket off dm', socket?.hasListeners('dm'));\n\t\t\tsocket?.off('onlineList');\n\t\t};\n\t}, [socket]);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>\n\t\t\t\t<CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n\t\t\t\t\t<i\n\t\t\t\t\t\tclassName=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n\t\t\t\t\t\tdata-qa=\"channel-section-collapse\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t</CollapseButton>\n\t\t\t\t<span>Direct Messages</span>\n\t\t\t</h2>\n\t\t\t<div>\n\t\t\t\t{!channelCollapse &&\n\t\t\t\t\tmemberData?.map((member) => {\n\t\t\t\t\t\tconst isOnline = onlineList.includes(member.id);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\tkey={member.id}\n\t\t\t\t\t\t\t\tactiveClassName=\"selected\"\n\t\t\t\t\t\t\t\tto={`/workspace/${workspace}/dm/${member.id}`}>\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t\t\tdata-qa=\"presence_indicator\"\n\t\t\t\t\t\t\t\t\tdata-qa-presence-self=\"false\"\n\t\t\t\t\t\t\t\t\tdata-qa-presence-active=\"false\"\n\t\t\t\t\t\t\t\t\tdata-qa-presence-dnd=\"false\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span>{member.nickname}</span>\n\t\t\t\t\t\t\t\t{member.id === userData?.id && <span> (me)</span>}\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default DMList;\n","// import useSocket from '@hooks/useSocket';\nimport { CollapseButton } from '@components/DMList/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst ChannelList: FC = () => {\n\tconst { workspace } = useParams<{ workspace?: string }>();\n\t// const [socket] = useSocket(workspace);\n\tconst { data: userData, error, revalidate, mutate } = useSWR<IUser>('/api/users', fetcher, {\n\t\tdedupingInterval: 1000, // 2초\n\t});\n\tconst { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n\tconst [channelCollapse, setChannelCollapse] = useState(false);\n\n\tconst toggleChannelCollapse = useCallback(() => {\n\t\tsetChannelCollapse((prev) => !prev);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>\n\t\t\t\t<CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n\t\t\t\t\t<i\n\t\t\t\t\t\tclassName=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n\t\t\t\t\t\tdata-qa=\"channel-section-collapse\"\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t</CollapseButton>\n\t\t\t\t<span>Channels</span>\n\t\t\t</h2>\n\t\t\t<div>\n\t\t\t\t{!channelCollapse &&\n\t\t\t\t\tchannelData?.map((channel) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\tkey={channel.name}\n\t\t\t\t\t\t\t\tactiveClassName=\"selected\"\n\t\t\t\t\t\t\t\tto={`/workspace/${workspace}/channel/${channel.name}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span># {channel.name}</span>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ChannelList;\n","import axios from 'axios'\nimport React, { VFC, useCallback, useState, useEffect } from 'react'\nimport { Redirect, Route, Switch, useParams } from 'react-router'\nimport useSWR from 'swr'\nimport { WorkSpaceStyle } from './styles'\nimport gravatar from 'gravatar'\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport loadable from '@loadable/component'\nimport Menu from '@components/Menu'\nimport { IChannel, IUser, IWorkspace } from '@typings/db'\nimport Modal from '@components/Modal'\nimport { SignupStyles } from '@pages/SignUp/styles'\nimport useInput from '@hooks/useInput'\nimport fetcher from '@utils/fetcher'\nimport CreateChannelModal from '@components/CreateChannelModal'\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal'\nimport InviteChannelModal from '@components/InviteChannelModal'\nimport DMList from '@components/DMList'\nimport ChannelList from '@components/ChannelList'\nimport useSocket from '@hooks/useSocket'\n\nconst Channel = loadable(() => import('@pages/Channel'))\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'))\n\nconst Workspace: VFC = () => {\n\tconst [newUrl, onChangeNewUrl, setNewUrl] = useInput('')\n\tconst [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('')\n\tconst [showUserMenu, setShowUserMenu] = useState<boolean>(false)\n\tconst [showWorkspaceModal, setShowWorkspaceModal] = useState<boolean>(false)\n\tconst [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState<boolean>(false)\n\tconst [showCreateChannelModal, setShowCreateChannelModal] = useState<boolean>(false)\n\tconst [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState<boolean>(false)\n\tconst [showInviteChannelModal, setShowInviteChannelModal] = useState<boolean>(false)\n\tconst { workspace } = useParams<{ workspace: string }>()\n\n\tconst { data, error, revalidate, mutate } = useSWR<IUser | false>('/api/users', fetcher, {\n\t\tdedupingInterval: 1000\n\t})\n\tconst { data: channelData } = useSWR<IChannel[]>(data ? `/api/workspaces/${workspace}/channels` : null, fetcher)\n\tconst { data: memberData } = useSWR<IUser[]>(data ? `/api/workspaces/${workspace}/members` : null, fetcher)\n\tconst [socket, disconnect] = useSocket(workspace)\n\n\tuseEffect(() => {\n\t\tif (channelData && data && socket) {\n\t\t\tsocket.emit('login', { id: data.id, channels: channelData.map((v) => v.id) });\n\t\t}\n\t}, [socket, data, channelData])\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdisconnect()\n\t\t}\n\t}, [workspace, disconnect])\n\n\tconst onLogout = useCallback(() => {\n\t\taxios.post('/api/users/logout', null, {\n\t\t\twithCredentials: true,\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tmutate(false, false)\n\t\t\t})\n\t}, [])\n\n\tconst onClickUserProfile = useCallback(() => {\n\t\tsetShowUserMenu(!showUserMenu)\n\t}, [showUserMenu])\n\n\tconst onClickCreateWorkspace = useCallback(() => {\n\t\tsetShowCreateWorkspaceModal(true)\n\t}, [])\n\n\tconst onCloseModal = useCallback(() => {\n\t\tsetShowCreateWorkspaceModal(false);\n\t\tsetShowCreateChannelModal(false)\n\t\tsetShowInviteWorkspaceModal(false)\n\t\tsetShowInviteChannelModal(false)\n\t}, [])\n\n\tconst onClickAddChannel = useCallback(() => {\n\t\tsetShowCreateChannelModal(true)\n\t}, [])\n\n\tconst onClickInviteWorkspace = useCallback(() => {\n\t\tsetShowInviteWorkspaceModal(true)\n\t}, [])\n\n\tconst CreateWorkspace = useCallback((e) => {\n\t\te.preventDefault();\n\t\tif (!newWorkspace || !newWorkspace.trim()) return; // trim : prevent blank space\n\t\tif (!newUrl || !newUrl.trim()) return;\n\t\taxios.post('/api/workspaces', {\n\t\t\tworkspace: newWorkspace,\n\t\t\turl: newUrl,\n\t\t},\n\t\t\t{ withCredentials: true }\n\t\t).then(() => {\n\t\t\trevalidate();\n\t\t\tsetShowCreateWorkspaceModal(false);\n\t\t\tsetNewWorkspace('')\n\t\t\tsetNewUrl('')\n\t\t}).catch((error) => {\n\t\t\tconsole.dir(error)\n\t\t\ttoast.error(error.response?.data, { position: 'bottom-center' })\n\t\t});\n\t}, [newWorkspace, newUrl])\n\n\tconst toggleWorkspaceModal = useCallback(() => {\n\t\tsetShowWorkspaceModal(!showWorkspaceModal)\n\t}, [showWorkspaceModal])\n\n\n\tif (data === undefined) {\n\t\treturn <div>Loading...</div>\n\t}\n\n\tif (!data) {\n\t\treturn <Redirect to=\"/login\" />\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<WorkSpaceStyle.Header>\n\t\t\t\t<WorkSpaceStyle.RightMenu>\n\t\t\t\t\t<span onClick={onClickUserProfile}>\n\t\t\t\t\t\t<WorkSpaceStyle.ProfileImg src={gravatar.url(data.email, { s: '28px', d: 'retro' })} alt={data.nickname} />\n\t\t\t\t\t\t{showUserMenu && (\n\t\t\t\t\t\t\t<Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onClickUserProfile}>\n\t\t\t\t\t\t\t\t<WorkSpaceStyle.ProfileModal>\n\t\t\t\t\t\t\t\t\t<img src={gravatar.url(data.nickname, { s: '28px', d: 'retro' })} alt={data.nickname} />\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span id=\"profile-name\">{data.nickname}</span>\n\t\t\t\t\t\t\t\t\t\t<span id=\"profile-active\">Active</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</WorkSpaceStyle.ProfileModal>\n\t\t\t\t\t\t\t\t<WorkSpaceStyle.LogOutButton onClick={onLogout}>Log out</WorkSpaceStyle.LogOutButton>\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</span>\n\t\t\t\t</WorkSpaceStyle.RightMenu>\n\t\t\t</WorkSpaceStyle.Header>\n\t\t\t<WorkSpaceStyle.WorkspaceWrapper>\n\t\t\t\t<WorkSpaceStyle.Workspaces>\n\t\t\t\t\t{data && data.Workspaces && data.Workspaces.map((ws: IWorkspace) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Link key={ws.id} to={`/workspace/${ws.name}/channel/general`}>\n\t\t\t\t\t\t\t\t<WorkSpaceStyle.WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkSpaceStyle.WorkspaceButton>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t<WorkSpaceStyle.AddButton onClick={onClickCreateWorkspace}>+</WorkSpaceStyle.AddButton>\n\t\t\t\t</WorkSpaceStyle.Workspaces>\n\t\t\t\t<WorkSpaceStyle.Channels>\n\t\t\t\t\t<WorkSpaceStyle.WorkspaceName onClick={toggleWorkspaceModal}>\n\t\t\t\t\t\tsleact\n\t\t\t\t\t</WorkSpaceStyle.WorkspaceName>\n\t\t\t\t\t<WorkSpaceStyle.MenuScroll>\n\t\t\t\t\t\t<Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n\t\t\t\t\t\t\t<WorkSpaceStyle.WorkspaceModal>\n\t\t\t\t\t\t\t\t<h2>Sleact</h2>\n\t\t\t\t\t\t\t\t<button onClick={onClickInviteWorkspace}>Add Member to this workspace</button>\n\t\t\t\t\t\t\t\t<button onClick={onClickAddChannel}>Add channel</button>\n\t\t\t\t\t\t\t</WorkSpaceStyle.WorkspaceModal>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t<ChannelList />\n\t\t\t\t\t\t<DMList />\n\t\t\t\t\t\t{/* {channelData?.map((v) => (<div>{v.name}</div>))} */}\n\t\t\t\t\t</WorkSpaceStyle.MenuScroll>\n\t\t\t\t</WorkSpaceStyle.Channels>\n\t\t\t\t<WorkSpaceStyle.Chats>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\n\t\t\t\t\t\t<Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</WorkSpaceStyle.Chats>\n\t\t\t</WorkSpaceStyle.WorkspaceWrapper>\n\t\t\t<Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\n\t\t\t\t<form onSubmit={CreateWorkspace}>\n\t\t\t\t\t<SignupStyles.Label id='workspace-label'>\n\t\t\t\t\t\t<span>Workspace Name</span>\n\t\t\t\t\t\t<SignupStyles.Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n\t\t\t\t\t</SignupStyles.Label>\n\t\t\t\t\t<SignupStyles.Label id='workspace-url-label'>\n\t\t\t\t\t\t<span>Workspace Url</span>\n\t\t\t\t\t\t<SignupStyles.Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\n\t\t\t\t\t</SignupStyles.Label>\n\t\t\t\t\t<SignupStyles.Button type='submit'>Create</SignupStyles.Button>\n\t\t\t\t</form>\n\t\t\t</Modal>\n\t\t\t<CreateChannelModal show={showCreateChannelModal} onCloseModal={onCloseModal} setShowCreateChannelModal={setShowCreateChannelModal} />\n\t\t\t<InviteWorkspaceModal show={showInviteWorkspaceModal} onCloseModal={onCloseModal} setShowInviteModal={setShowInviteWorkspaceModal} />\n\t\t\t<InviteChannelModal show={showInviteChannelModal} onCloseModal={onCloseModal} setShowInviteModal={setShowInviteChannelModal} />\n\t\t</div>\n\t)\n}\n\nexport default Workspace"],"names":["show","onCloseModal","setShowInviteModal","workspace","channel","useParams","newMember","onChangeNewMember","setNewMember","useInput","data","userData","useSWR","fetcher","dedupingInterval","revalidate","revalidateChannel","onInviteMember","useCallback","e","preventDefault","trim","axios","email","withCredentials","then","response","catch","error","toast","position","onSubmit","id","type","value","onChange","ModalStyle","CreateModal","CloseModalButton","children","stopPropagation","onClick","sockets","disconnect","io","transports","undefined","WorkSpaceStyle","RightMenu","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","MenuStyles","CreateMenu","Menu","style","closeButton","defaultProps","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","mutate","onCreateChannel","name","console","dir","Modal","revalidateMember","CollapseButton","collapse","memberData","socket","useSocket","channelCollapse","setChannelCollapse","useState","onlineList","setOnlineList","toggleChannelCollapse","prev","useEffect","on","off","className","map","member","isOnline","includes","key","activeClassName","to","nickname","channelData","Channel","loadable","DirectMessage","newUrl","onChangeNewUrl","setNewUrl","newWorkspace","onChangeNewWorkspace","setNewWorkspace","showUserMenu","setShowUserMenu","showWorkspaceModal","setShowWorkspaceModal","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showCreateChannelModal","showInviteWorkspaceModal","setShowInviteWorkspaceModal","showInviteChannelModal","setShowInviteChannelModal","emit","channels","v","onLogout","onClickUserProfile","onClickCreateWorkspace","onClickAddChannel","onClickInviteWorkspace","CreateWorkspace","url","toggleWorkspaceModal","src","gravatar","s","d","alt","right","top","ws","slice","toUpperCase","left","path","component","InviteChannelModal"],"sourceRoot":""}