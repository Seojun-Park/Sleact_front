{"version":3,"file":"474.js","mappings":"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","sources":["webpack://sleact_front/./pages/DirectMessage/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react'\nimport gravatar from 'gravatar'\nimport useSWR, { useSWRInfinite } from 'swr'\nimport { useParams } from 'react-router'\nimport axios from 'axios'\nimport fetcher from '@utils/fetcher'\nimport { DMStyle } from '@pages/DirectMessage/styles'\nimport ChatBox from '@components/ChatBox'\nimport ChatList from '@components/ChatList'\nimport useInput from '@hooks/useInput'\nimport { IDM } from '@typings/db'\nimport makeSection from '../../utils/makeSection'\nimport Scrollbars from 'react-custom-scrollbars'\nimport useSocket from '../../hooks/useSocket'\n\nconst DirectMessage = () => {\n\tconst scrollbarRef = useRef<Scrollbars>(null);\n\tconst { workspace, id } = useParams<{ workspace: string, id: string }>()\n\tconst [socket] = useSocket(workspace)\n\tconst { data: userData } = useSWR(`/api/workspaces/${workspace}/users/${id}`, fetcher, {\n\t\tdedupingInterval: 1000\n\t})\n\tconst { data: myData } = useSWR(`/api/users`, fetcher)\n\tconst { data: chatData, mutate: mutateChat, revalidate, setSize } = useSWRInfinite<IDM[]>(\n\t\t(index) => `/api/workspaces/${workspace}/dms/${id}/chats?perPage=20&page=${index + 1}`,\n\t\tfetcher\n\t);\n\n\tconst isEmpty = chatData?.[0]?.length === 0;\n\tconst isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < 20) || false\n\n\tconst [chat, onChangeChat, setChat] = useInput('')\n\n\tconst onSubmitForm = useCallback((e) => {\n\t\te.preventDefault();\n\t\tif (chat?.trim() && chatData) {\n\t\t\tconst savedChat = chat;\n\t\t\tmutateChat((prevChatData) => {\n\t\t\t\tprevChatData?.[0].unshift({\n\t\t\t\t\tid: (chatData[0][0]?.id || 0) + 1,\n\t\t\t\t\tcontent: savedChat,\n\t\t\t\t\tSenderId: myData.id,\n\t\t\t\t\tSender: myData,\n\t\t\t\t\tReceiverId: userData.id,\n\t\t\t\t\tReceiver: userData,\n\t\t\t\t\tcreatedAt: new Date()\n\t\t\t\t});\n\t\t\t\treturn prevChatData\n\t\t\t}, false).then(() => {\n\t\t\t\tsetChat('')\n\t\t\t\tif (scrollbarRef.current) {\n\t\t\t\t\tscrollbarRef.current?.scrollToBottom()\n\t\t\t\t}\n\t\t\t})\n\t\t\taxios.post(`/api/workspaces/${workspace}/dms/${id}/chats`, {\n\t\t\t\tcontent: chat\n\t\t\t}).catch(error => console.dir(error))\n\t\t}\n\t\tsetChat('')\n\t}, [chat, chatData, myData, userData, workspace, id])\n\n\t//put the scrollbar at the bottom when loading\n\tuseEffect(() => {\n\t\tif (chatData?.length === 1) {\n\t\t\tscrollbarRef.current?.scrollToBottom()\n\t\t}\n\t}, [chatData])\n\n\n\tconst onMessage = useCallback((data: IDM) => {\n\t\tif (data.SenderId === Number(id) && myData.id !== Number(id)) {\n\t\t\tmutateChat((chatData) => {\n\t\t\t\tchatData?.[0].unshift(data);\n\t\t\t\treturn chatData\n\t\t\t}, false).then(() => {\n\t\t\t\tif (scrollbarRef.current) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tscrollbarRef.current.getScrollHeight() <\n\t\t\t\t\t\tscrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n\t\t\t\t\t) {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tscrollbarRef.current?.scrollToBottom();\n\t\t\t\t\t\t}, 50)\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [id, mutateChat, myData])\n\n\tuseEffect(() => {\n\t\tsocket?.on('dm', onMessage);\n\t\treturn () => {\n\t\t\tsocket?.off('dm', onMessage)\n\t\t}\n\t}, [socket, id, myData])\n\n\tif (!userData || !myData) {\n\t\treturn null;\n\t}\n\n\tconst chatSections = makeSection(chatData ? chatData.flat().reverse() : [])\n\n\treturn (\n\t\t<DMStyle.Container>\n\t\t\t<DMStyle.Header>\n\t\t\t\t<img src={gravatar.url(userData.email, { s: '24px', d: 'retro' })} alt={userData.nickname} />\n\t\t\t\t<span>{userData.nickname}</span>\n\t\t\t</DMStyle.Header>\n\t\t\t<ChatList\n\t\t\t\tchatSections={chatSections}\n\t\t\t\tscrollRef={scrollbarRef}\n\t\t\t\tsetSize={setSize}\n\t\t\t\tisReachingEnd={isReachingEnd}\n\t\t\t/>\n\t\t\t<ChatBox chat={chat} onChangechat={onChangeChat} onSubmitForm={onSubmitForm} />\n\t\t</DMStyle.Container>\n\t)\n}\n\nexport default DirectMessage"],"names":["scrollbarRef","useRef","workspace","id","useParams","socket","useSocket","data","userData","useSWR","fetcher","dedupingInterval","myData","chatData","mutate","mutateChat","revalidate","setSize","useSWRInfinite","index","isReachingEnd","length","chat","onChangeChat","setChat","useInput","onSubmitForm","useCallback","e","preventDefault","trim","savedChat","prevChatData","unshift","content","SenderId","Sender","ReceiverId","Receiver","createdAt","Date","then","current","scrollToBottom","axios","catch","error","console","dir","useEffect","onMessage","Number","getScrollHeight","getClientHeight","getScrollTop","setTimeout","on","off","chatSections","makeSection","flat","reverse","src","gravatar","email","s","d","alt","nickname","scrollRef","onChangechat"],"sourceRoot":""}